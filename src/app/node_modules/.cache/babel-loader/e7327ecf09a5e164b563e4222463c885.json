{"ast":null,"code":"var _jsxFileName = \"/Users/jamesroberts/Documents/development/fantasy/fpl_stats_frontend/src/app/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\nimport { withRouter } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.userHasAuthenticated = authenticated => {\n      this.setState({\n        isAuthenticated: authenticated\n      });\n    };\n\n    this.setPlayerData = (playerName, playerLeagues) => {\n      this.setState({\n        playerName: playerName,\n        playerLeagues: playerLeagues\n      });\n    };\n\n    this.handleLogout = async event => {\n      localStorage.removeItem('entryId');\n      this.userHasAuthenticated(false);\n      this.props.history.push(\"/login\");\n    };\n\n    this.setSelectedLeague = (eventKey, event) => {\n      this.setState({\n        \"selectedLeague\": eventKey\n      });\n    };\n\n    this.state = {\n      isAuthenticated: false,\n      isAuthenticating: true,\n      playerName: null,\n      playerLeagues: [],\n      selectedLeague: \"Select a league\"\n    };\n  }\n\n  async componentDidMount() {\n    if (localStorage.getItem('entryId') && localStorage.getItem('playerCookie') && localStorage.getItem('playerName') && localStorage.getItem('playerLeagues')) {\n      this.setPlayerData(localStorage.getItem('playerName'), JSON.parse(localStorage.getItem('playerLeagues')));\n      this.userHasAuthenticated(true);\n    }\n\n    ;\n    this.setState({\n      isAuthenticating: false\n    });\n  }\n\n  render() {\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      playerName: this.state.playerName,\n      userHasAuthenticated: this.userHasAuthenticated,\n      setPlayerData: this.setPlayerData\n    };\n    return !this.state.isAuthenticating && React.createElement(\"div\", {\n      className: \"app container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      bg: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"FPL Stats\"), React.createElement(Navbar.Toggle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Navbar.Collapse, {\n      className: \"justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.isAuthenticated ? [React.createElement(NavDropdown, {\n      key: \"nav-dropdown\",\n      className: \"mr-4\",\n      title: this.state.selectedLeague,\n      id: \"basic-nav-dropdown\",\n      onSelect: this.setSelectedLeague,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.playerLeagues.map((item, index) => React.createElement(NavDropdown.Item, {\n      eventKey: item.name,\n      href: \"#\",\n      key: item.id,\n      value: item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, item.name))), React.createElement(Nav.Link, {\n      key: \"login-link\",\n      onClick: this.handleLogout,\n      className: \"btn btn-outline-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Logout\")] : React.createElement(Nav.Link, {\n      href: \"/login\",\n      className: \"btn btn-outline-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Login\")))), React.createElement(Routes, {\n      childProps: childProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/jamesroberts/Documents/development/fantasy/fpl_stats_frontend/src/app/src/App.js"],"names":["React","Component","Nav","Navbar","NavDropdown","Routes","withRouter","App","constructor","props","userHasAuthenticated","authenticated","setState","isAuthenticated","setPlayerData","playerName","playerLeagues","handleLogout","event","localStorage","removeItem","history","push","setSelectedLeague","eventKey","state","isAuthenticating","selectedLeague","componentDidMount","getItem","JSON","parse","render","childProps","map","item","index","name","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\nimport { withRouter } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticated: false,\n      isAuthenticating: true,\n      playerName: null,\n      playerLeagues: [],\n      selectedLeague: \"Select a league\"\n    };\n  }\n  async componentDidMount() {\n    if (\n      localStorage.getItem('entryId') && \n      localStorage.getItem('playerCookie') && \n      localStorage.getItem('playerName') && \n      localStorage.getItem('playerLeagues')\n      ) {\n        this.setPlayerData(localStorage.getItem('playerName'), JSON.parse(localStorage.getItem('playerLeagues')));\n        this.userHasAuthenticated(true);\n    };\n    this.setState({ isAuthenticating: false });\n  }\n  userHasAuthenticated = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n  setPlayerData = (playerName, playerLeagues) => {\n    this.setState(\n      {\n        playerName: playerName,\n        playerLeagues: playerLeagues\n      }\n    )\n  }\n  handleLogout = async event => {\n    localStorage.removeItem('entryId')\n    this.userHasAuthenticated(false);\n    this.props.history.push(\"/login\");\n  }\n  setSelectedLeague = (eventKey, event) => {\n    this.setState({\n      \"selectedLeague\": eventKey\n    });\n  }\n  render() {\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      playerName: this.state.playerName,\n      userHasAuthenticated: this.userHasAuthenticated,\n      setPlayerData: this.setPlayerData\n    };\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"app container\">\n        <Navbar bg=\"light\">\n          <Navbar.Brand href=\"/\">FPL Stats</Navbar.Brand>\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n          <Nav>\n            {this.state.isAuthenticated\n              ? [\n                <NavDropdown key=\"nav-dropdown\" className=\"mr-4\" title={this.state.selectedLeague} id=\"basic-nav-dropdown\" onSelect={this.setSelectedLeague}>\n                  {this.state.playerLeagues.map((item, index) => (\n                    <NavDropdown.Item eventKey={item.name} href=\"#\" key={item.id} value={item.name}>{item.name}</NavDropdown.Item>\n                  ))}\n                </NavDropdown>,\n                <Nav.Link key=\"login-link\" onClick={this.handleLogout} className=\"btn btn-outline-secondary\">Logout</Nav.Link>\n              ]\n              : <Nav.Link href=\"/login\" className=\"btn btn-outline-secondary\">Login</Nav.Link>\n            }\n          </Nav>\n        </Navbar.Collapse>\n        </Navbar>\n        <Routes childProps={childProps} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}